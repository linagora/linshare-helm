{{- if .Values.ingressroutes.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: linshare
  labels:
    ingressroute: linshare
{{ include "linshare.labels" . | indent 4 }}
  {{- with .Values.ingressroutes.annotations }}
  annotations:
    {{- toYaml . | nindent 4 -}}
  {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`{{- .Values.ingressroutes.baseDomain -}}`)
    kind: Rule
  - match: Host(`{{- .Values.ingressroutes.hosts.admin -}}`)
    kind: Rule
    services:
    - name: ui-admin
      port: 80
      # (default 1) A weight used by the weighted round-robin strategy (WRR).
      weight: 1
      # (default true) PassHostHeader controls whether to leave the request's Host
      # Header as it was before it reached the proxy, or whether to let the proxy set it
      # to the destination (backend) host.
      passHostHeader: true
      responseForwarding:
        # (default 100ms) Interval between flushes of the buffered response body to the client.
        flushInterval: 100ms
  - match: Host(`{{- .Values.ingressroutes.hosts.user -}}`)
    kind: Rule
    priority: 12
    services:
    - name: ui-user
      port: 80
      weight: 1
      passHostHeader: true
      responseForwarding:
        flushInterval: 100ms
  - match: Host(`{{- .Values.ingressroutes.hosts.webmail -}}`)
    kind: Rule
    priority: 12
    services:
    - name: mail
      port: 80
      weight: 1
      passHostHeader: true
      responseForwarding:
        flushInterval: 100ms
  tls:
    certResolver: {{ .Values.ingressroutes.certResolver }}
    domains:
      - main: {{ .Values.ingressroutes.baseDomain }}
        sans:
          - "*.{{- .Values.ingressroutes.baseDomain -}}"
{{- end }}
