# vim: syntax=yaml textwidth=80 expandtab tabstop=2 softtabstop=2 shiftwidth=2 autoindent
{{- if .Values.demo.postgresqlAsPod }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    {{- include "linshare.labels" . | nindent 4 }}
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      {{- include "linshare.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgresql
        {{- include "linshare.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.demo.postgresql.image }}
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-postgresql-account-linshare
                  key: postgresql-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-postgresql-account-linshare
                  key: postgresql-password
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          resources:
            {{- toYaml .Values.demo.postgresql.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: pg-data
      {{- if .Values.dockerCredentials }}
      imagePullSecrets:
        - name: docker-registry-secret
      {{- end }}
{{- if and (.Values.demo.postgresql.storageSize) (.Values.demo.postgresql.storageClass) }}
  volumeClaimTemplates:
    - metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: {{ .Values.demo.postgresql.storageClass }}
        name: pg-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.demo.postgresql.storageSize }}
{{- end }}
{{- end }}
