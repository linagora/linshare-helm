# vim: syntax=yaml textwidth=80 expandtab tabstop=2 softtabstop=2 shiftwidth=2 autoindent
apiVersion: batch/v1
kind: Job
metadata:
  name: linshare-init
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
spec:
  activeDeadlineSeconds: 1800
  template:
    metadata:
      labels:
        app: linshare-init
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-linshare
        image: busybox:1.32
        args:
        - /bin/sh
        - -c
        - >
          set -x;
          while [[ $(wget --spider -S "http://linshare-backend:8080/linshare" 2>&1 | grep "HTTP/" | awk '{print $2}' | tail -1) -ne 200 ]]; do
            sleep 15;
            echo "Waiting for Linshare ...";
          done;
          echo "Linshare is ready..";
        imagePullPolicy: Always
      containers:
        - name: init
          image: {{ .Values.linshare.init.image }}
          env:
            - name: LS_DEBUG
              value: "0"
            - name: LS_SERVER_HOST
              value: linshare-backend
            - name: LS_SERVER_PORT
              value: "8080"
            - name: LS_USER_URL
              value: "{{ .Values.linshare.uiUser.url }}"
            {{- if .Values.linshare.uiUser.externalUrl }}
            - name: LS_EXTERNAL_URL
              value: "{{ .Values.linshare.uiUser.externalUrl }}"
            {{- end }}
            {{- if .Values.linshare.uiUploadRequest.url }}
            - name: LS_UPLOAD_REQUEST_URL
              value: "{{ .Values.linshare.uiUploadRequest.url }}"
            {{- end }}
            - name: LS_NO_REPLY_ADDRESS
              value: "{{ .Values.linshare.init.noReply }}"
            - name: LS_LDAP_NAME
              value: "{{ .Values.linshare.init.ldapName }}"
            - name: LS_LDAP_URL
              value: "ldap://ldap:389"
            - name: LS_LDAP_BASE_DN
              value: "{{ .Values.linshare.init.ldapbaseDn }}"
            - name: LS_LDAP_DN
              valueFrom:
                secretKeyRef:
                  name: db-ldap-account-linshare
                  key: ldap-username
            - name: LS_LDAP_PW
              valueFrom:
                secretKeyRef:
                  name: db-ldap-account-linshare
                  key: ldap-password
            - name: LS_DEFAULT_PASSWORD
              value: "adminlinshare"
            - name: LS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: linshare-root-account
                  key: root-password
            - name: LS_DOMAIN_PATTERN_NAME
              value: "{{- .Values.linshare.init.domainPattern.name -}}"
            - name: LS_DOMAIN_PATTERN_MODEL
              value: "{{- .Values.linshare.init.domainPattern.model -}}"
      {{- if .Values.linshare.init.extraJwtKeyName }}
            - name: LS_JWT_PUB_KEY_NAME
              value: "{{- .Values.linshare.init.extraJwtKeyName -}}"
            - name: LS_JWT_PUB_KEY
              value: "/linagora/data/public"
          volumeMounts:
            - name: extra-jwt-key
              mountPath: /linagora/data/
      volumes:
        - name: extra-jwt-key
          secret:
            secretName: extra-jwt-key
            optional: true
      {{- end }}
      {{- if .Values.dockerCredentials }}
      imagePullSecrets:
        - name: docker-registry-secret
      {{- end }}
